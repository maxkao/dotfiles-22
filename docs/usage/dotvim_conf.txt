etc/vim/vimrc
==============
| Src: `etc/vim/vimrc <https://github.com/westurner/dotvim/tree/master/vimrc>`__

.. code:: vim

   .
   .vimrc
   ==========
   ::
     git clone https://github.com/westurner/dotvim
     git clone ssh://git@github.com/westurner/dotvim
     make help
   Vim Reference
   ---------------
    :help            --  open vim help               [help]
    :help <tag>      --  open vim help for           [<tag>]
                         tag: (<cmd>, plugin/doc/<tag>.txt)
    :help vimtutor   --  open vim help for vimtutor tutorial
    :help quickref   --  open vim quick reference    [quickref, Q_bu]
    :<up arrow>      --  search backward through vim history
    [[               --  up a section                [ [[ ]
    C-o              --  goto previous position      [CTRL-O, jumplist]
    C-]              --  follow a tag (help quickref, select Q_bu, C-])
    %          --  variable: current filename
    %:p        --  variable: current filepath
    %          --  motion: find the next instance of selected word [%]
    :buffers         --  list vim buffers            [Q_bu]
    $VIMRUNTIME      --  /{colors,syntax,macros}     [$VIMRUNTIME]
    :set [all]       --  list all nondefault options [set, redir, SaveSession]
    :map             --  list actual mappings        [Q_km]
    ListMappings     --  list commented mappings
    Dotvimhelp       --  list commented mappings
    DotvimReload     --  reload vim configuration (on top of existing config)
    :scriptnames     --  list scripts and plugins
    e[dit]           --  reload the current file
    e <path>         --  open file                   [edit, Q_ed]
    e <pa...><tab>   --  open file with tab-completion [wildmenu, wildmode]
    :tabnew <path>   --  open file in a new tab
    :read filename|  --  insert filename after cursor
    :read !cmd       --  insert 'cmd' output after cursor
    :%! [cmd]        --  buffer > stdin > [cmd] > stdout => buffer.replace
    :put %           --  put % (current filename) after the cursor [help put]
    h, j, k, l       --  left, down, up, right       [Q_lr, Q_ud] 
    C-E              --  move N lines downwards (1)
    C-D              --  move N lines Downwards (1/2 move)
    C-F              --  move N pages Forwards (downwards)
    C-Y              --  move N lines upwards (default: 1)
    C-U              --  move N lines Upwards (default: 1/2 move)
    C-B              --  move N pages Backwards (upwards)
    [n]G             --  goto line #
    g <C-g>          --  whereami
    u                --  undo
    ^r               --  redo
    :%s:\(.*\):+\1:g --  Regex
   Modes
    i                --  insert
    I                --  insert at beginning of line
    a                --  append
    A                --  append at end of line
    v                --  visual
    c-v              --  visual block
    ;;               --  command
    <Esc>            --  command
   Vim Marks
    m[a-z]{1}        --  set mark
    `[a-z]{1}        --  goto mark
    '[a-z]{1}        --  goto mark
   Macros
    q[a-z]{1}        --  start recording
    q                --  stop recording
    @[a-z]{1}        --  replay macro
    @@               --  repeat macro
    q2<seq><esc>q;@2 --  record macro to 2 and repeat
   Searching
    /<pattern>       --  search for term
    *                --  search for term under cursor next
    n                --  next search ocurrence
    #                --  search for term under cursor previous
    N                --  previous search ocurrence
    :[l][vim]grep <pattern> <file>
    :cl   :ll        --  list list
    :copen :lopen    --  open list
    :cw   :lw        --  toggle show list
    :ccl[ose] :lcl   --  close list
    :cn   :ln        --  next <Enter>
    :cp   :lp        --  prev <Enter>
    :cc!  :lc [nr]   --  jump to [nr]
    :cfir :cla       --  first, last
   Yanking and Pasting
    y[a-z]           --  yank to buffer [a-z]
    p[a-z]           --  paste from buffer [a-z]
    ]p               --  paste to level
   Indenting/Shifting Blocks
    [n]<             --  shift block left
    [n]>             --  shift block right
   Folding
    :help Fold       --  also usr_28
    :set nofen       --  stop folding
    zf               --  create fold
    zo               --  fold open
    zO               --  fold open recursive
    zc               --  fold close
    zC               --  fold close recursive
    zx               --  undo manual fold actions
    zX               --  undo manual fold actions and recompute
    zM               --  fold close all but current (focus)
    zR               --  fold open all (review)
    :Voom [format]   --  open VOom outline sidebar
    <leader> t       --  :TagBarToggle " outline sidebar
   Etiquette
    <leader> i       --  toggle unprintables
    <leader> sd      --  toggle highlight EOL whitespace
    <leader> sc      --  clear highlighting
   ##
   ## g:__sfile__dirname     -- directory containing this vimrc script
                                after symlinks
                                ~dirname(abspath(realpath(__file__)))
   ##
    Source_dotvim(filename)  -- source dirname(this_vimrc)/filename
          echo l:vimrcfilename . " empty or not found."
   ##
   ## source vimrc.local.01-env.vimrc
   ##
   set window title to vim title (display full path)
    :ListMappings     -- list .vimrc(.*) comments (n(next) and p(rev))
    :DotvimHelp       -- "
    :Help             -- "
    :DotvimReload   -- reload ~/.vimrc
    :Reload         -- reload ~/.vimrc
    :Dr             -- reload ~/.vimrc
      seeAlso: :SaveSession, :RestoreSession (*)     [help SaveSession]
    :Path()   -- echo path information %s %:h %:p:h       [help expand]
    :Cdhere() -- cd to here (this dir, dirname(__file__))    [cd %:p:h]
    \       -- <leader>
    <space> -- <leader>
    ,       --  <leader> == <comma>
    :;   --  colon semicolon -> <esc>:
    :;   --  colon semicolon -> <esc>:
    ;;   --  <esc> == double semicolon
    Quicklist
    <leader> q               --  toggle quicklist [:cw/:cwindow]
    <leader> n               --  next quicklist item [:cn/:cnext]
    Location List
    <leader> l               --  toggle location list [:lw/:lwindow]
    <leader> <shift> N       --  next location list item [:ln/:lnext]
   Workaround vim lp:#572863
   Code Folding
   UTF-8
   TODO XXX
   Code Indenting
   Indent wrapped lines a bit   [breakindent showbreak]
       set showbreak=..
   Wrap in the middle of lines
   Searching
    set colorcolumn=0    --  clear color column
   Turn Off Visual Bell
   WildMenu
   Spell Checking
    <leader> sp           --  toggle spellcheck
    shift-<enter>        --  insert new line w/o changing mode
       no error bells
       Jump to last position
       remove trailing whitespace
       filetype extensions
          if &previewwindow
              exec 'setlocal winheight='.&previewheight
          endif
       Auto completion
        CTRL-<space>     --  autocomplete menu
        CTRL-<tab>       --  autocomplete menu
       close vim if the only window left open is a NERDTree
       Open NERDTree automatically if no files were specified
   Drag and Drop
     :help drag-n-drop
     shift-<drop>    --  cd to file's directory
     ctrl-<drop>     --  split new window for file
     <drop>          --  open file or paste path at cursor
   Fonts
    :PatchFont      -- set the font (s:fontsize, s:fonts, guifont (set gfn=))
                       tries each font in s:fonts until one is found
   GUI Menubar
    :HideMenubar    -- hide GUI menubar
    :ShowMenubar    -- show GUI menubar
     :Set256         -- set 256 colors (for console vim)
     :Set88          -- set 88 colors (for console vim)
   GUI
        Remove gui scrollbars
        ctrl-z   --  undo [u]
        alt-z    --  undo
        ctrl-r   --  redo
        alt-r    --  redo
        ctrl-X   --  cut
        alt-x    --  cut
        ctrl-c   --  copy
        alt-c    --  copy
           always call Set256.
           if this causes problems with older terminals
           :Set88
   autocmd! Syntax * syn match ExtraWhitespace /\s\+$\| \+\ze\t/
    <leader> sd              --  match EOL whitespace
    <leader> sc              --  clear search highlighting
    ctrl-q       --  close
    <leader> i   --  toggle show invisibles
    ,cd          --  :cd %:p:h
    T            --  wrap paragram
   Keep search matches in the middle of the window.
    <leader> [    --  toggle cursorline and cursorcolumn
    <leader> hm   --  set horizontal line mark
    <leader> hv   --  set vertical column mark
    <leader> c    --  clear virt marks
    Tab          --  Indent Line
   map <Tab>         >gb
    Shift-Tab    --  Dedent Line
    ctrl-t       --  Indent Current Line
    ctrl-d       --  Dedent Current Line
    >            --  Visual Indent Block
    <            --  visual dedent block
   Alternative using Tab/Shift-Tab (for gvim).
    tab          --  shift right
    Shift-tab    --  shift left
   vnoremap <Tab>    >gv
    ctrl-f       --  find
    ctrl-alt-A   --  copy all
    ctrl-v       -- paste (*)
                    conflict: vim blockwise visual selection [CTRL-v]
   map <C-v> <space>"+gP
   imap <C-v> <space><Esc>"+gP
   vmap <C-v> <Esc>"+gP
    alt-v        -- paste (*)
   nm \\paste\\        "=@*.'xy'<CR>gPFx"_2x:echo<CR>
   imap <a-v>          x<Esc>\\paste\\"_s
   vmap <a-v>          "-cx<Esc>\\paste\\"_x
   Paste
    shift-insert --  paste (*)
                     conflict: mac keyboards do not have <Insert>
   Save / Close
    ctrl-S       --  Save
    ctrl-Alt-W   --  Close
    ctrl-Home    --  Goto line one
                     conflict: mac keyboards do not have <Home>
    ctrl-End     --  Goto last line (lines[:-1])
                     conflict: mac keyboards do not have <Home>
   Page Up / Page Down
    shift-Down    --  PageDown (<C-d>)
    shift-Up      --  PageUp (<C-u>)
   K    --  PageUp
   nnoremap K  <PageUp>
   J    --  PageDown
   nnoremap J  <PageDown>
   Keyboard PageUp/PageDown are actually 2*<c-U>
                     conflict: mac keyboards do not have <PageUp, PageDown>
   Buffer Nav
    ctrl-a       --  move to beginning of line (^)
    ctrl-e       --  move to end of line ($)
   Window Nav        (window-move-cursor)
    ctrl-j       --  cursor window down
    ctrl-u       --  cursor window down
    ctrl-k       --  cursor window up
    ctrl-l       --  cursor window right
    ctrl-h       --  cursor window left
   Window Resize     (window-resize)
    ctrl-w _     --  maximize window height
    ctrw-w 1_    --  minimize window height
    ctrl-w |     --  maximize window width
    ctrl-w 1|    --  minimize window width
    ctrl-w =     --  equalize window sizes
    [n]ctrl-w >  --  expand width
    [n]ctrl-w <  --  contract width
    [n]ctrl-w +  --  increase height
    [n]ctrl-w -  --  reduce height
    ctrl-w o     --  minimze all other windows
   Window Movement (window-move)
   Window Up
    <leader> wk  --  move window up
    ctrl-wi      --  move window up
    <leader> wi  --  move window up
   Window Right
    <leader> wl  --  move window right
   Window Down
    <leader> wj  --  move window down
    ctrl-wu      --  move window down
    <leader> wu  --  move window down
   Window Left
    <leader> wj  --  move window left
   Window Rotate
    ctrl-w R     --  rotate window up
    ctrl-w r     --  rotate window down
   Tab Movement (tab-page-commands)
    ctrl-Alt-h   --  previous tab
    Alt-u        --  previous tab
    ctrl-Alt-l   --  next tab
    Alt-i        --  next tab
   Man.vim          --  view manpages in vim
    :Man man        --  view manpage for 'man'
    <leader> o      --  Open uri under cursor
        :Ack <term> <path>
        <leader>a        --  Ack
   Grin              -- Find in Python
   Ctags
    ctrl-[           --  go to tag under cursor
    ctrl-T           --  go back  #TODO
   sh: ctags -R -f ~/.vim/tags/python-$PYVER.ctags $PYLIBDIR
   Use :make to see syntax errors. (:cn and :cp to move around, :dist to see
   all errors)
   Colors
    :PatchColors     --  load local colorizing postsets
   call PatchColors()    -- call PatchColors when sourced
        Vim2VimWrite()   -- write highlight codes to ./vim_highlight_output.txt
          pip install vim2vim   -- https://pypi.python.org/pypi/vim2vim
   List highlight colors
   Python
    Wrap at 72 chars for comments.
    read virtualenv's site-packages to vim path
      if 'VIRTUAL_ENV' in env:
          project_base_dir = env['VIRTUAL_ENV']
          sys.path.insert(0, project_base_dir)
          activate_this = os.path.join(project_base_dir, 'bin/activate_this.py')
          execfile(activate_this, dict(__file__=activate_this))
      for p in sys.path:
          if os.path.isdir(p):
              vim.command(r"set path+=%s" % (p.replace(" ", r"\ ")))
              # TODO: merge paths
       TODO: python regex current buffer
   function! Pyline(...) range
        :Pyline -- python regex current buffer
   endfunction
   Tabsetting functions
    :Fourtabs    -- set to four (4) soft tabs (Default)
   Default to fourtabs
    :Threetabs   -- set to three (3) soft tabs
    :Twotabs     -- set to two (2) soft tabs
    :Onetab      -- set to one (1) soft tab
    :Hardtabs    -- set to hard \t tabs (e.g. for Makefiles)
    :CurrentBuffer -- display number of current buffer
    diff           -- vimdiff, Hgvdiff, Gdiff
      :diffget   -- get from diff (overwrite or append)
      do         -- :diffget other block
      :diffput   -- put from diff (overwrite or append)
      dp         -- :diffput block 
      <C-W><C-w> -- cycle between buffers
    diffget maps   -- 3-way merge buffers
      <leader> 2   -- diffget from bufnr 2
      <leader> 3   -- diffget from bufnr 3
      <leader> 4   -- diffget from bufnr 4
    :Striptrailingwhitespace -- strip spaces at the end of lines
   Adjust font-size
    <C-Up>   -- increase font size
    <C-Down> -- decrease font size
    <F3>     -- insert ReST date heading
   Trac
   ##
   ## source vimrc.local.99-after.vimrc
   ##
   References
     - https://dev.launchpad.net/UltimateVimPythonSetup
     - https://github.com/kennethreitz/dotfiles/blob/master/.vimrc
     - https://bitbucket.org/sjl/dotfiles/src/tip/vim/.vimrc#cl-716
     - http://vim.wikia.com/wiki/Highlight_unwanted_spaces
     - http://stackoverflow.com/questions/1551231
     - http://superuser.com/questions/117969/is-there-a-way-to-move-a-split-page-to-a-new-tab-in-vim
     - http://sontek.net/turning-vim-into-a-modern-python-ide
     - http://vim.wikia.com/wiki/VimTip320
   .

   
   
etc/vim/vimrc.full.bundles.vimrc
=================================
| Src: `etc/vim/vimrc.full.bundles.vimrc <https://github.com/westurner/dotvim/tree/master/vimrc.full.bundles.vimrc>`__

.. code:: vim

   .
   .

   
   
etc/vim/vimrc.local.99-after.vimrc
===================================
| Src: `etc/vim/vimrc.local.99-after.vimrc <https://github.com/westurner/dotvim/tree/master/vimrc.local.99-after.vimrc>`__

.. code:: vim

   .
    vimrc.local.99-after.vimrc
   .

   
   
etc/vim/vimrc.tinyvim.bundles.vimrc
====================================
| Src: `etc/vim/vimrc.tinyvim.bundles.vimrc <https://github.com/westurner/dotvim/tree/master/vimrc.tinyvim.bundles.vimrc>`__

.. code:: vim

   .
   Bundle            -- Vim bundle manager [help bundle]
   :BundleList          - list configured plugins
   :BundleInstall(!)    - install (update) plugins
   :BundleSearch(!) foo - search (or refresh cache first) for foo
   :BundleClean(!)      - confirm (or auto-approve) removal of unused plugins
   The Bundle URLs are intentionally complete https URLs
   * grep '^Bundle \'' vimrc.bundles
   * sed -i 's\https://github.com/\ssh://git@github.com/\g'
   Info.vim          -- vim infopages in vim [help info]
    :Info sed        --  view infopage for 'sed'
    <Space>          --  Scroll forward (page down).
    <Backspace>      --  Scroll backward (page up).
    <Tab>            --  Move cursor to next hyperlink within this node.
    <Enter>,<C-]>    --  Follow hyperlink under cursor.
    ;,<C-T>          --  Return to last seen node.
    .,>              --  Move to the "next" node of this node.
    p,<              --  Move to the "previous" node of this node.
    u                --  Move "up" from this node.
    d                --  Move to "directory" node.
    t                --  Move to the Top node.
    <C-S>            --  Search forward within current node only.
    s                --  Search forward through all nodes for a specified
    string.
    q                --  Quit browser.
   Signify   -- show git/hg file changes in gutter [help signify]
   NERDTree      -- File browser [help NERDTree]
    <Leader>e         --  toggle NERDTree
    ctrl-e            --  toggle NERDTree
    <Leader>E         --  open nerdtree to current file (:NERDTreeFind %:p:h)
    ctrl-E            --  open nerdtree to current file (:NERDTreeFind %:p:h)
    I                 --  toggle view hidden files
    B                 --  toggle view bookmarks
    cd                --  set vim CWD to selected dir
    C                 --  refocus view to selected dir
    o                 --  open
    r                 --  refresh dir
    R                 --  refresh root
    t                 --  open in new tab
    T                 --  open in new tab silently
    u                 --  up a dir
    U                 --  up a dir and leave open
    x                 --  close node
    X                 --  close all nodes recursive
    ?                 --  toggle help
   FindInNERDTree   -- NERDTRee show current file [help NERDTreeFind]
    <c-b>            --  toggle BufExplorer
    ?                --  toggle BufExplorer help
    <leader>b        --  toggle BufExplorer
   CtrlP             -- file/buffer/mru finder [help ctrlp]
    <C-p>            -- CtrlP (fuzzy matching)
   Syntastic         -- syntax highlighting [help syntastic]
   EasyMotion    -- easy visual motions [help easymotion]
    <Leader>m-w/e    --  search forward (beg/end of word)
    <Leader>m-b      --  search backward
    <Leader>m-j      --  search line down
    <Leader>m-k      --  search line up
   Jellybeans    -- a good colorscheme w/ sensible diff highlighting
    :colorscheme jellybeans -- switch to the jellybeans colorscheme
   Vim-misc      -- functions for colorscheme-switcher and vim-session
   Vim Colorscheme Switcher [help colorscheme-switcher]
    <F8>         -- cycle colors forward
    <Shift><F8>  -- cycle colors reverse
   vim-nginx -- nginx ftdetect, indent, and syntax
   n3.vim    -- N3/Turtle RDF Syntax
   SPARQL    -- SPARQL syntax
   Pyrex         -- Pyrex syntax
   Jinja         -- Jinja Templates syntax
   Salt      -- Salt syntax
   All of your Bundles must be added before the following line
   .

   
   
